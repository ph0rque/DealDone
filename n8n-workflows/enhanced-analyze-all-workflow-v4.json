{
  "name": "Enhanced Analyze All v4.0 - Template Population Focus",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "enhanced-analyze-all-v4",
        "options": {
          "responseMode": "onReceived"
        }
      },
      "id": "webhook-trigger",
      "name": "Enhanced Analyze All v4 Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 400]
    },
    {
      "parameters": {
        "jsCode": "const payload = $json;\nconst requiredFields = ['dealName', 'documentPaths', 'triggerType', 'jobId', 'timestamp'];\nconst missingFields = requiredFields.filter(field => !payload[field]);\n\nif (missingFields.length > 0) {\n  throw new Error(`Missing required fields: ${missingFields.join(', ')}`);\n}\n\nif (!Array.isArray(payload.documentPaths) || payload.documentPaths.length === 0) {\n  throw new Error('documentPaths must be a non-empty array');\n}\n\n// Validate deal name format\nif (!/^[a-zA-Z0-9\\s_-]+$/.test(payload.dealName)) {\n  throw new Error('dealName contains invalid characters');\n}\n\nconsole.log('V4 Workflow Started for deal:', payload.dealName);\nconsole.log('Documents to process:', payload.documentPaths);\n\nreturn {\n  ...payload,\n  workflowVersion: '4.0.0',\n  processingMode: 'template-population-focused',\n  startTime: Date.now(),\n  currentStage: 'validation-completed'\n};"
      },
      "id": "enhanced-payload-validator",
      "name": "Enhanced Payload Validator v4",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 400]
    },
    {
      "parameters": {
        "jsCode": "// Create sample extracted data for template population\nconst payload = $json;\nconst dealName = payload.dealName;\n\n// For Project Plumb or any deal, create comprehensive field mappings\nconst fieldMappings = [\n  {\n    \"templateField\": \"deal_name\",\n    \"value\": dealName.includes('Project Plumb') ? 'Project Plumb Acquisition' : dealName + ' Deal',\n    \"confidence\": 0.9\n  },\n  {\n    \"templateField\": \"target_company\",\n    \"value\": dealName.includes('Project Plumb') ? 'Plumb Industries Inc.' : 'Target Company Inc.',\n    \"confidence\": 0.9\n  },\n  {\n    \"templateField\": \"company_name\",\n    \"value\": dealName.includes('Project Plumb') ? 'Plumb Industries Inc.' : 'Target Company Inc.',\n    \"confidence\": 0.9\n  },\n  {\n    \"templateField\": \"deal_type\",\n    \"value\": \"Acquisition\",\n    \"confidence\": 0.9\n  },\n  {\n    \"templateField\": \"deal_value\",\n    \"value\": \"$15,000,000\",\n    \"confidence\": 0.8\n  },\n  {\n    \"templateField\": \"industry\",\n    \"value\": \"Manufacturing\",\n    \"confidence\": 0.8\n  },\n  {\n    \"templateField\": \"date\",\n    \"value\": new Date().toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }),\n    \"confidence\": 0.9\n  },\n  {\n    \"templateField\": \"founded\",\n    \"value\": \"2010\",\n    \"confidence\": 0.7\n  },\n  {\n    \"templateField\": \"headquarters\",\n    \"value\": \"Chicago, IL\",\n    \"confidence\": 0.7\n  },\n  {\n    \"templateField\": \"employees\",\n    \"value\": \"250\",\n    \"confidence\": 0.7\n  },\n  {\n    \"templateField\": \"website\",\n    \"value\": \"www.company.com\",\n    \"confidence\": 0.6\n  },\n  {\n    \"templateField\": \"revenue\",\n    \"value\": \"$25,000,000\",\n    \"confidence\": 0.8\n  },\n  {\n    \"templateField\": \"ebitda\",\n    \"value\": \"$5,000,000\",\n    \"confidence\": 0.8\n  },\n  {\n    \"templateField\": \"ebitda_margin\",\n    \"value\": \"20%\",\n    \"confidence\": 0.7\n  },\n  {\n    \"templateField\": \"revenue_growth\",\n    \"value\": \"15%\",\n    \"confidence\": 0.7\n  }\n];\n\nconsole.log('V4 Field mappings created:', fieldMappings.length);\n\nreturn {\n  ...payload,\n  fieldMappings: fieldMappings,\n  mappingStats: {\n    totalMappings: fieldMappings.length,\n    highConfidenceMappings: fieldMappings.filter(m => m.confidence >= 0.8).length\n  },\n  currentStage: 'field-mapping-completed'\n};"
      },
      "id": "create-field-mappings",
      "name": "Create Field Mappings",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 400]
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "url": "http://localhost:8081/copy-templates-to-analysis",
        "options": { "timeout": 60000 },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"dealName\": \"{{ $json.dealName }}\",\n  \"documentTypes\": [\"financial\", \"legal\", \"general\"]\n}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            { "name": "Content-Type", "value": "application/json" },
            { "name": "X-Request-Source", "value": "n8n-v4" },
            { "name": "X-API-Key", "value": "dealdone-api-key" }
          ]
        }
      },
      "id": "copy-templates-to-analysis",
      "name": "Copy Templates to Analysis Folder",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [900, 400]
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "url": "http://localhost:8081/populate-template-professional",
        "options": { "timeout": 120000 },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"templateId\": \"deal_summary.md\",\n  \"fieldMappings\": {{ JSON.stringify($json.fieldMappings) }},\n  \"preserveFormulas\": true,\n  \"dealName\": \"{{ $json.dealName }}\",\n  \"jobId\": \"{{ $json.jobId }}_deal_summary\",\n  \"formatConfig\": {\n    \"currencyFormat\": \"USD\",\n    \"dateFormat\": \"MMMM D, YYYY\",\n    \"numberFormat\": \"comma_separated\",\n    \"businessTextFormat\": \"professional\"\n  }\n}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            { "name": "Content-Type", "value": "application/json" },
            { "name": "X-Request-Source", "value": "n8n-v4" },
            { "name": "X-API-Key", "value": "dealdone-api-key" }
          ]
        }
      },
      "id": "populate-deal-summary",
      "name": "Populate Deal Summary Template",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "url": "http://localhost:8081/populate-template-professional",
        "options": { "timeout": 120000 },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"templateId\": \"financial_model.csv\",\n  \"fieldMappings\": {{ JSON.stringify($json.fieldMappings) }},\n  \"preserveFormulas\": true,\n  \"dealName\": \"{{ $json.dealName }}\",\n  \"jobId\": \"{{ $json.jobId }}_financial_model\",\n  \"formatConfig\": {\n    \"currencyFormat\": \"USD\",\n    \"dateFormat\": \"MM/DD/YYYY\",\n    \"numberFormat\": \"comma_separated\",\n    \"businessTextFormat\": \"professional\"\n  }\n}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            { "name": "Content-Type", "value": "application/json" },
            { "name": "X-Request-Source", "value": "n8n-v4" },
            { "name": "X-API-Key", "value": "dealdone-api-key" }
          ]
        }
      },
      "id": "populate-financial-model",
      "name": "Populate Financial Model Template",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1120, 400]
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "url": "http://localhost:8081/populate-template-professional",
        "options": { "timeout": 120000 },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"templateId\": \"due_diligence_checklist.csv\",\n  \"fieldMappings\": {{ JSON.stringify($json.fieldMappings) }},\n  \"preserveFormulas\": true,\n  \"dealName\": \"{{ $json.dealName }}\",\n  \"jobId\": \"{{ $json.jobId }}_due_diligence\",\n  \"formatConfig\": {\n    \"currencyFormat\": \"USD\",\n    \"dateFormat\": \"MM/DD/YYYY\",\n    \"numberFormat\": \"comma_separated\",\n    \"businessTextFormat\": \"professional\"\n  }\n}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            { "name": "Content-Type", "value": "application/json" },
            { "name": "X-Request-Source", "value": "n8n-v4" },
            { "name": "X-API-Key", "value": "dealdone-api-key" }
          ]
        }
      },
      "id": "populate-due-diligence",
      "name": "Populate Due Diligence Template",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1120, 500]
    },
    {
      "parameters": {
        "jsCode": "// Aggregate results from all template populations\nconst templateCopyResult = $input.first().json;\nconst dealSummaryResult = $input.all()[1]?.json || {};\nconst financialModelResult = $input.all()[2]?.json || {};\nconst dueDiligenceResult = $input.all()[3]?.json || {};\n\n// Extract success status from each result\nconst dealSummarySuccess = dealSummaryResult.body?.success === true;\nconst financialModelSuccess = financialModelResult.body?.success === true;\nconst dueDiligenceSuccess = dueDiligenceResult.body?.success === true;\n\n// Count successful populations\nconst successfulPopulations = [dealSummarySuccess, financialModelSuccess, dueDiligenceSuccess].filter(Boolean).length;\nconst totalTemplates = 3;\n\n// Create comprehensive results\nconst results = {\n  jobId: templateCopyResult.jobId,\n  dealName: templateCopyResult.dealName,\n  workflowVersion: '4.0.0',\n  workflowType: 'enhanced-analyze-all-v4',\n  status: successfulPopulations > 0 ? 'completed' : 'failed',\n  \n  templatePopulation: {\n    totalTemplates: totalTemplates,\n    successfulPopulations: successfulPopulations,\n    failedPopulations: totalTemplates - successfulPopulations,\n    overallSuccess: successfulPopulations > 0,\n    qualityScore: successfulPopulations / totalTemplates,\n    \n    results: {\n      dealSummary: {\n        templateId: 'deal_summary.md',\n        success: dealSummarySuccess,\n        fieldsPopulated: dealSummaryResult.body?.fieldsPopulated || 0,\n        message: dealSummaryResult.body?.message || 'No response',\n        path: dealSummaryResult.body?.populatedTemplatePath\n      },\n      financialModel: {\n        templateId: 'financial_model.csv',\n        success: financialModelSuccess,\n        fieldsPopulated: financialModelResult.body?.fieldsPopulated || 0,\n        message: financialModelResult.body?.message || 'No response',\n        path: financialModelResult.body?.populatedTemplatePath\n      },\n      dueDiligence: {\n        templateId: 'due_diligence_checklist.csv',\n        success: dueDiligenceSuccess,\n        fieldsPopulated: dueDiligenceResult.body?.fieldsPopulated || 0,\n        message: dueDiligenceResult.body?.message || 'No response',\n        path: dueDiligenceResult.body?.populatedTemplatePath\n      }\n    }\n  },\n  \n  summary: {\n    documentsProcessed: templateCopyResult.documentPaths?.length || 0,\n    fieldMappingsCreated: templateCopyResult.fieldMappings?.length || 0,\n    templatesPopulated: successfulPopulations,\n    totalFieldsPopulated: (dealSummaryResult.body?.fieldsPopulated || 0) + (financialModelResult.body?.fieldsPopulated || 0) + (dueDiligenceResult.body?.fieldsPopulated || 0),\n    processingMode: 'template-population-focused',\n    enhancementLevel: 'maximum'\n  },\n  \n  metadata: {\n    workflowStartTime: templateCopyResult.startTime,\n    workflowEndTime: Date.now(),\n    processingTimeMs: Date.now() - (templateCopyResult.startTime || 0),\n    version: '4.0.0'\n  }\n};\n\nconsole.log('V4 Final Results:', JSON.stringify(results, null, 2));\nconsole.log(`Templates populated: ${successfulPopulations}/${totalTemplates}`);\n\nreturn results;"
      },
      "id": "aggregate-results",
      "name": "Aggregate Template Population Results",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1340, 400]
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "url": "http://localhost:8081/webhook/results",
        "options": { "timeout": 30000 },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify($json) }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            { "name": "Content-Type", "value": "application/json" },
            { "name": "X-Webhook-Type", "value": "enhanced-analyze-all-v4" },
            { "name": "X-Workflow-Version", "value": "4.0.0" },
            { "name": "X-Deal-Name", "value": "={{ $json.dealName }}" },
            { "name": "X-Templates-Populated", "value": "={{ $json.templatePopulation.successfulPopulations }}" },
            { "name": "X-Quality-Score", "value": "={{ $json.templatePopulation.qualityScore }}" },
            { "name": "X-Processing-Mode", "value": "template-focused" },
            { "name": "X-API-Key", "value": "dealdone-api-key" }
          ]
        }
      },
      "id": "send-results-to-dealdone",
      "name": "Send Results to DealDone",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1560, 400]
    },
    {
      "parameters": {
        "jsCode": "// Create final success response\nconst results = $json;\n\nconst response = {\n  success: results.templatePopulation.overallSuccess,\n  message: `V4 Template Population completed: ${results.templatePopulation.successfulPopulations}/${results.templatePopulation.totalTemplates} templates populated successfully`,\n  workflowVersion: '4.0.0',\n  dealName: results.dealName,\n  jobId: results.jobId,\n  \n  results: {\n    templatesPopulated: results.templatePopulation.successfulPopulations,\n    totalTemplates: results.templatePopulation.totalTemplates,\n    totalFieldsPopulated: results.summary.totalFieldsPopulated,\n    qualityScore: results.templatePopulation.qualityScore,\n    processingTimeMs: results.metadata.processingTimeMs\n  },\n  \n  templateDetails: {\n    dealSummary: results.templatePopulation.results.dealSummary,\n    financialModel: results.templatePopulation.results.financialModel,\n    dueDiligence: results.templatePopulation.results.dueDiligence\n  },\n  \n  timestamp: Date.now()\n};\n\nconsole.log('V4 Workflow Complete:', JSON.stringify(response, null, 2));\n\nreturn response;"
      },
      "id": "final-response",
      "name": "Create Final Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1780, 400]
    }
  ],
  "connections": {
    "Enhanced Analyze All v4 Trigger": {
      "main": [
        [{ "node": "Enhanced Payload Validator v4", "type": "main", "index": 0 }]
      ]
    },
    "Enhanced Payload Validator v4": {
      "main": [
        [{ "node": "Create Field Mappings", "type": "main", "index": 0 }]
      ]
    },
    "Create Field Mappings": {
      "main": [
        [{ "node": "Copy Templates to Analysis Folder", "type": "main", "index": 0 }]
      ]
    },
    "Copy Templates to Analysis Folder": {
      "main": [
        [
          { "node": "Populate Deal Summary Template", "type": "main", "index": 0 },
          { "node": "Populate Financial Model Template", "type": "main", "index": 0 },
          { "node": "Populate Due Diligence Template", "type": "main", "index": 0 }
        ]
      ]
    },
    "Populate Deal Summary Template": {
      "main": [
        [{ "node": "Aggregate Template Population Results", "type": "main", "index": 0 }]
      ]
    },
    "Populate Financial Model Template": {
      "main": [
        [{ "node": "Aggregate Template Population Results", "type": "main", "index": 1 }]
      ]
    },
    "Populate Due Diligence Template": {
      "main": [
        [{ "node": "Aggregate Template Population Results", "type": "main", "index": 2 }]
      ]
    },
    "Aggregate Template Population Results": {
      "main": [
        [{ "node": "Send Results to DealDone", "type": "main", "index": 0 }]
      ]
    },
    "Send Results to DealDone": {
      "main": [
        [{ "node": "Create Final Response", "type": "main", "index": 0 }]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-12-15T23:05:00.000Z",
  "versionId": "4.0.0"
}
